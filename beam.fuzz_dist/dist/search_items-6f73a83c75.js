searchNodes=[{"doc":"Property testing distributed applications with fault injection and verification. A framework for and customization of Jepsen for BEAM applications. Many thanks to @aphyr and https://jepsen.io for https://github.com/jepsen-io/jepsen .","ref":"FuzzDist.html","title":"FuzzDist","type":"module"},{"doc":"Antidote impl of a Jepsen Db. Jepsen's setup-primary is used to configure and cluster Antidote. Antidote does not have a literal &quot;primary&quot;.","ref":"FuzzDist.Antidote.Db.html","title":"FuzzDist.Antidote.Db","type":"module"},{"doc":"Antidote impl of a Jepsen g-set.","ref":"FuzzDist.Antidote.GSet.html","title":"FuzzDist.Antidote.GSet","type":"module"},{"doc":"Antidote impl of a Jepsen pn-counter.","ref":"FuzzDist.Antidote.PNCounter.html","title":"FuzzDist.Antidote.PNCounter","type":"module"},{"doc":"A generic Elixir @behaviour for a Jepsen Db.","ref":"FuzzDist.Jepsen.Db.html","title":"FuzzDist.Jepsen.Db","type":"behaviour"},{"doc":"","ref":"FuzzDist.Jepsen.Db.html#setup_primary/2","title":"FuzzDist.Jepsen.Db.setup_primary/2","type":"function"},{"doc":"","ref":"FuzzDist.Jepsen.Db.html#c:setup_primary/2","title":"FuzzDist.Jepsen.Db.setup_primary/2","type":"callback"},{"doc":"A generic Elixir @behaviour for a Jepsen g-set.","ref":"FuzzDist.Jepsen.GSet.html","title":"FuzzDist.Jepsen.GSet","type":"behaviour"},{"doc":"","ref":"FuzzDist.Jepsen.GSet.html#add/2","title":"FuzzDist.Jepsen.GSet.add/2","type":"function"},{"doc":"","ref":"FuzzDist.Jepsen.GSet.html#c:add/2","title":"FuzzDist.Jepsen.GSet.add/2","type":"callback"},{"doc":"","ref":"FuzzDist.Jepsen.GSet.html#read/1","title":"FuzzDist.Jepsen.GSet.read/1","type":"function"},{"doc":"","ref":"FuzzDist.Jepsen.GSet.html#c:read/1","title":"FuzzDist.Jepsen.GSet.read/1","type":"callback"},{"doc":"Generic Jepsen client for Elixir. Jepsen creates operations on the Control node driven by property test :generator s. The operations are executed on the target node's client as an Elixir @behavior . JepSir is strict in following a happy path. Unexpected or malformed messages crash or raise to invalidate the client in Jepsen. Function names and @spec s are the same as the Jepsen client protocol.","ref":"FuzzDist.Jepsen.JepSir.html","title":"FuzzDist.Jepsen.JepSir","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"FuzzDist.Jepsen.JepSir.html#child_spec/1","title":"FuzzDist.Jepsen.JepSir.child_spec/1","type":"function"},{"doc":"","ref":"FuzzDist.Jepsen.JepSir.html#t:antidote_return/0","title":"FuzzDist.Jepsen.JepSir.antidote_return/0","type":"type"},{"doc":"","ref":"FuzzDist.Jepsen.JepSir.html#t:jepsen_return/0","title":"FuzzDist.Jepsen.JepSir.jepsen_return/0","type":"type"},{"doc":"The Jepsen Clojure client connects here via a websocket. The connection is passed to a GenServer ( JepSir ) that acts as an Elixir client for database interactions. Websocket is straight passthru, no management, :timeout , or similar. Let client on either end, Jepsen or Elixir, manage the connection.","ref":"FuzzDist.Jepsen.JepWs.html","title":"FuzzDist.Jepsen.JepWs","type":"module"},{"doc":"A generic Elixir @behaviour for a Jepsen pn-counter.","ref":"FuzzDist.Jepsen.PNCounter.html","title":"FuzzDist.Jepsen.PNCounter","type":"behaviour"},{"doc":"","ref":"FuzzDist.Jepsen.PNCounter.html#decrement/3","title":"FuzzDist.Jepsen.PNCounter.decrement/3","type":"function"},{"doc":"","ref":"FuzzDist.Jepsen.PNCounter.html#c:decrement/3","title":"FuzzDist.Jepsen.PNCounter.decrement/3","type":"callback"},{"doc":"","ref":"FuzzDist.Jepsen.PNCounter.html#increment/3","title":"FuzzDist.Jepsen.PNCounter.increment/3","type":"function"},{"doc":"","ref":"FuzzDist.Jepsen.PNCounter.html#c:increment/3","title":"FuzzDist.Jepsen.PNCounter.increment/3","type":"callback"},{"doc":"","ref":"FuzzDist.Jepsen.PNCounter.html#read/2","title":"FuzzDist.Jepsen.PNCounter.read/2","type":"function"},{"doc":"","ref":"FuzzDist.Jepsen.PNCounter.html#c:read/2","title":"FuzzDist.Jepsen.PNCounter.read/2","type":"callback"},{"doc":"Telemetry integration. Match :ok = :telemetry/all as telemetry is expected as part of test. FuzzDist executes the following events: [:fuzz_dist, :beam] - Executed on receipt of BEAM monitored message/signal. Measurements %{} Metadata: :event - The BEAM event [:fuzz_dist, :client] - Executed on connection of Jepsen client ws connection Measurements %{} Metadata: :antidote_conn - AntidoteDB connection that client will use for all transactions [:fuzz_dist, :g_set_read, :start] - Executed on receipt of Jepsen :read operation. Measurements :system_time - The system time Metadata: %{} [:fuzz_dist, :g_set_read, :stop] - Executed on completion of read before return to Jepsen. Measurements :duration - Duration of the read. Metadata: reply returned by read, may contain keys: :type - :ok, :fail, :info. :value - Value returned by read. :error - Supplemental error information. [:fuzz_dist, :g_set_add, :start] - Executed on receipt of Jepsen :add operation. Measurements :system_time - The system time Metadata: value : - The value to be added [:fuzz_dist, :g_set_add, :stop] - Executed on completion of add before return to Jepsen. Measurements :duration - Duration of the add. Metadata: reply returned by add, may contain keys: :type - :ok, :fail, :info. :error - Supplemental error information. [:fuzz_dist, :pn_counter_read, :start] - Executed on receipt of Jepsen :read operation. Measurements :system_time - The system time Metadata: %{} [:fuzz_dist, :pn_counter_read, :stop] - Executed on completion of read before return to Jepsen. Measurements :duration - Duration of the read. Metadata: reply returned by read, may contain keys: :type - :ok, :fail, :info. :value - Value returned by read. :error - Supplemental error information. [:fuzz_dist, :pn_counter_increment, :start] - Executed on receipt of Jepsen :increment operation. Measurements :system_time - The system time Metadata: value : - The [key value] to be incremented [:fuzz_dist, :pn_counter_increment, :stop] - Executed on completion of :increment before return to Jepsen. Measurements :duration - Duration of the increment. Metadata: reply returned by increment, may contain keys: :type - :ok, :fail, :info. :error - Supplemental error information. [:fuzz_dist, :pn_counter_decrement, :start] - Executed on receipt of Jepsen :decrement operation. Measurements :system_time - The system time Metadata: value : - The [key value] to be decremented [:fuzz_dist, :pn_counter_decrement, :stop] - Executed on completion of :decrement before return to Jepsen. Measurements :duration - Duration of the decrement. Metadata: reply returned by decrement, may contain keys: :type - :ok, :fail, :info. :error - Supplemental error information. [:fuzz_dist, :setup_primary, :start] - Executed on receipt of Jepsen :setup_primary operation. Measurements :system_time - The system time Metadata: nodes - List of (long) node names [:fuzz_dist, :setup_primary, :stop] - Executed on completion of setup_primary/1 before return to Jepsen. Measurements :duration - Duration of the cluster configuration Metadata: %{} TODO: add Prometheus collector.","ref":"FuzzDist.Telemetry.html","title":"FuzzDist.Telemetry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"FuzzDist.Telemetry.html#child_spec/1","title":"FuzzDist.Telemetry.child_spec/1","type":"function"},{"doc":"","ref":"FuzzDist.Telemetry.html#log_handler/4","title":"FuzzDist.Telemetry.log_handler/4","type":"function"},{"doc":"","ref":"FuzzDist.Telemetry.html#start_link/1","title":"FuzzDist.Telemetry.start_link/1","type":"function"}]